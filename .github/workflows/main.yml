name: IBM Security Integratons CI/CD testing
on:
  push:
    #    branches:
    # - '*'
  schedule:
    - cron: '0 6 * * *'
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLIENT_ID: '${{ secrets.CLIENT_ID }}'
      CLIENT_SECRET: '${{ secrets.CLIENT_SECRET }}'
      VERIFY_TENANT: '${{ secrets.VERIFY_TENANT }}'
      DOCKER_ID: '${{ secrets.DOCKER_ID }}'
      DOCKER_SECRET: '${{ secrets.DOCKER_SECRET }}'
    steps:
      - uses: actions/checkout@v3
      - uses: balchua/microk8s-actions@v0.3.0
        with:
          channel: '1.25/stable'
          addons: '["dns", "rbac", "hostpath-storage", "registry"]'
      - name: Build demo app
        id: build_demo_app
        run: |
          # Build the demo application
          cd demo_app && ant && cd ../
          cp demo_app/dist/LIBERTY_SecTestWeb.war liberty/
          cp demo_app/dist/JBOSS_SecTestWeb.war jboss/
          cp demo_app/dist/TOMCAT_SecTestWeb.war tomcat/

      - name: Deploy and test Liberty
        id: deploy_liberty_integration
        run: |
          # Build and test the Liberty integration
          cd liberty
          ./deploy_and_test.sh
          ./.clean.sh

      - name: Deploy and test Wildfly
        id: deploy_wildfly_integration
        run: |
          # Build and test the Wildfly integration
          cd jboss
          ./deploy_and_test.sh
          ./.clean.sh

      - name: Deploy and test Tomcat
        id: deploy_tomcat_integration
        run: |
          cd tomcat
          ./deploy_and_test.sh
          ./.clean.sh

      - name: Build artifacts to be published
        id: build_release_artifacts
        run: |
          echo "At this point all of the integrations have been tested; so lets rebuild the demo app and the JWT Valve and publish them"
          cd demo_app && ant && cd ../
          cd tomcat && mvn dependency:copy-dependencies && ant && cd ../

      - name: version
        run: echo "::set-output name=version::$(date +%s)"
        id: version

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: integration-assets
          tag_name: 'build_${{ steps.version.outputs.version }}'
          body: Nightly build of integration assets
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload valve asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: tomcat/build/jar/verify.access.sso.jwt.valve.jar
          asset_name: verify.access.sso.jwt.valve.jar
          asset_content_type: application/zip

      - name: Upload Liberty app to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: demo_app/dist/LIBERTY_SecTestWeb.war
          asset_name: LIBERTY_SecTestWeb.war
          asset_content_type: application/zip

      - name: Upload Tomcat app to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: demo_app/dist/TOMCAT_SecTestWeb.war
          asset_name: TOMCAT_SecTestWeb.war
          asset_content_type: application/zip

      - name: Upload Wildfly app to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: demo_app/dist/JBOSS_SecTestWeb.war
          asset_name: JBOSS_SecTestWeb.war
          asset_content_type: application/zip

      - uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 1
        env:
          GITHUB_TOKEN: ${{ github.token }}
